#! /usr/bin/python

# -----------------------------------------------------------------------------------------------------------------------------
# GENERAL
# -----------------------------------------------------------------------------------------------------------------------------
#
# author: Sebastiaan Van Hoecke
# mail: sebastiaan@sevaho.io
#
# NOTE:
#
# -----------------------------------------------------------------------------------------------------------------------------

import sys
import getopt
import urllib3
import certifi
import threading
from queue import Queue
import os

# -----------------------------------------------------------------------------------------------------------------------------
# GLOBAL VARIABLES
# -----------------------------------------------------------------------------------------------------------------------------

headers = {}
headers['User-Agent'] = 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0'
url_queue = Queue()
lists_dir  = '/home/sevaho/GitHub/SecLists/Discovery/Web-Content/'
url_base = 'https://sevaho.io/'
http = urllib3.PoolManager(cert_reqs='CERT_REQUIRED', ca_certs=certifi.where())

# -----------------------------------------------------------------------------------------------------------------------------
# FUNCTIONS
# -----------------------------------------------------------------------------------------------------------------------------


def usage ():

    print("Usage: %s [OPTIONS]... [ARGS]... \
            \n \
            \n  description\
            \n \
            \nOPTIONS:\
            \n \
            \n  -h, *           display the help and exit\
            \n  -t, --target    specify target \
            \n  -l, --listdir   specifiy a directory containing worldlist text files \
            \n \
            \nEXAMPLES:\
            \n \
            \n  ./webspy.py -t https://example.com -l my_custom_worldlist_directory \
            \n \
            \nNOTE:\
            \n \
            " % (sys.argv[0]))

    sys.exit(1)


def expand_queue ():

    for r, d, f in os.walk(lists_dir):

        for file in f:

            with open(r + '/' + file) as fd:

                try:
                    line = fd.readline()

                    while line:
                        url_queue.put(line.strip())
                        line = fd.readline()

                except Exception as e:
                    pass

            fd.close()


def look_up_directory ():

    while not url_queue.empty():
        url_directory = url_queue.get()
        r = http.request('GET', url_base + url_directory, headers=headers)
        url_queue.task_done()

        if r.status != 404:
            print('[%d] => %s' % (r.status, url_base + url_directory))

# -----------------------------------------------------------------------------------------------------------------------------
# MAIN
# -----------------------------------------------------------------------------------------------------------------------------


def main (argv):

    global url_queue, url_base, lists_dir

    if not len(argv):
        usage()

    try:

        opts, args = getopt.getopt(argv, "ht:l:", ["help", "target", "listdir"])

    except getopt.GetoptError as err:

        print("error: %s" % (str(err)))
        usage()

    for opt, arg in opts:

        if opt in ("-h", "--help"):
            usage()
        elif opt in ("-t", "--target"):
            url_base = arg + '/'
        elif opt in ("-l", "--listdir"):
            lists_dir = arg
        else:
            assert False, "Unhandled Option"

    print("Attacking: %s" % (url_base))

    for x in range(1):
        t = threading.Thread(target=expand_queue, args=())
        t.start()

    for x in range(15):
        t = threading.Thread(target=look_up_directory, args=())
        t.start()

    for x in range(15):
        t.join()


if __name__ == "__main__":

    main(sys.argv[1:])
