#! /usr/bin/python

# -----------------------------------------------------------------------------------------------------------------------------
# GENERAL
# -----------------------------------------------------------------------------------------------------------------------------
#
# author: Sebastiaan Van Hoecke
# mail: sebastiaan@sevaho.io
#
# NOTE:
#
# -----------------------------------------------------------------------------------------------------------------------------

import sys
import getopt
import requests
from bs4 import BeautifulSoup
import re
from urllib.parse import urlparse

# -----------------------------------------------------------------------------------------------------------------------------
# GLOBAL VARIABLES
# -----------------------------------------------------------------------------------------------------------------------------

target          = ""
output_file     = ""
words           = []
links           = ["/"]
counter         = 1

# -----------------------------------------------------------------------------------------------------------------------------
# CLASSES
# -----------------------------------------------------------------------------------------------------------------------------

# -----------------------------------------------------------------------------------------------------------------------------
# FUNCTIONS
# -----------------------------------------------------------------------------------------------------------------------------


def usage ():

    print("Usage: python %s [OPTIONS]... [ARGS]... \
            \n \
            \n\tdescription\
            \n \
            \nOPTIONS:\
            \n \
            \n\t-h, *               display the help and exit \
            \n\t-t, --target        target \
            \n\t-o, --output        output file \
            \n \
            \nEXAMPLES:\
            \n \
            \n\tpython %s -t https://sevaho.io -o wordlist.txt \
            \n \
            \nNOTE:\
            \n \
            " % (sys.argv[0], sys.argv[0]))

    sys.exit(1)


def banner ():

    print("A Banner \
            \n \
            ")


def find_words (url):
    global words

    try:
        r = requests.get(url)
        soup = BeautifulSoup(r.text, 'lxml')
        text = soup.get_text()
        wordlist = re.sub("[^\w]", " ", text).split()

        for w in wordlist:
            if w not in words:
                words.append(w)

    except Exception as e:
        pass


def randomize (word):
    print()


def writetofile ():
    global output_file

    if output_file == "":
        output_file = 'worlist.' + urlparse(target).netloc + '.txt'

    fd = open("file.txt", "wb")

    for w in words:
        fd.write(str.encode(w) + b'\n')

    fd.close()


def find_links (listlinks):
    global links, counter, target
    listlinks = list(listlinks)
    print("############################## ITERATIONS %d ###############################" % counter)
    counter += 1

    try:
        for l in links:
            r = requests.get(target + l)
            soup = BeautifulSoup(r.text, 'lxml')
            a = [a.get('href') for a in soup.find_all('a', href=True)]
            for l in [a.get('href') for a in soup.find_all('a', href=True)]:
                if (l.startswith('/')):
                    if l not in links:
                        print("Found link: ", target + l)
                        links.append(l)
                elif l.startswith(target):
                    if l not in links:
                        print("Found link: ", l)
                        links.append(l)

    except Exception as e:
        pass

    if listlinks != links:
        find_links(links)

# -----------------------------------------------------------------------------------------------------------------------------
# MAIN
# -----------------------------------------------------------------------------------------------------------------------------


def main (argv):

    global target, output_file, links

    banner()

    if not len(argv):
        usage()

    try:

        opts, args = getopt.getopt(argv, "ht:o:", [
            "help",
            "target",
            "output"])

    except getopt.GetoptError as err:

        print("error: %s" % (str(err)))
        usage()

    for opt, arg in opts:

        if opt in ("-h", "--help"):
            usage()
        elif opt in ("-t", "--target"):
            target = arg
        elif opt in ("-o", "--output"):
            output_file = arg
        else:
            assert False, "Unhandled Option"

    find_links(links)

    for l in links:
        find_words(target + l)

    print(words)
    writetofile()


if __name__ == "__main__":

    main(sys.argv[1:])
